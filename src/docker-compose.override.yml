version: '3.4'

services:
  zookeeper:
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper
  
  mongo-container:
    container_name: mongo-container
    networks:
      - cqrssocialmedianetwork
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - "mongodb_data_container:/data/db"
  
  postgres-container:
    container_name: postgres-container
    networks:
      - cqrssocialmedianetwork
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgresPsw
      - POSTGRES_DB=postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - posgresql_data:/var/lib/postgresql/data/
    
  sql-container:
    container_name: sql-container
    networks:
      - cqrssocialmedianetwork
    environment:
      - MSSQL_SA_PASSWORD=MYStr0ngSAPaSsW0rd02
      - MSSQL_PID=Express
      - ACCEPT_EULA=Y
    restart: always
    ports:
      - "1401:1433"
  
  pgadmin:
    container_name: pgadmin
    networks:
      - cqrssocialmedianetwork
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@maleki.com
      - PGADMIN_DEFAULT_PASSWORD=admin123456789
    restart: always
    ports:
      - "5050:80"
    volumes:
      - posgresql_data:/root/.pgadmin
  
#  post.query.api:
#    environment:
#      - ASPNETCORE_ENVIRONMENT=Development
#    ports:
#      - "8001:80"
#
#  post.command.api:
#    environment:
#      - ASPNETCORE_ENVIRONMENT=Development
#    ports:
#      - "8000:80"

